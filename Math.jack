class Math {
	static Array twoToThe;
	function void init() {
		let twoToThe = Array.new(16);
		let twoToThe[0] = 1;
		let twoToThe[1] = 2;
		let twoToThe[2] = 4;
		let twoToThe[3] = 8;
		let twoToThe[4] = 16;
		let twoToThe[5] = 32;
		let twoToThe[6] = 64;
		let twoToThe[7] = 128;
		let twoToThe[8] = 256;
		let twoToThe[9] = 512;
		let twoToThe[10] = 1024;
		let twoToThe[11] = 2048;
		let twoToThe[12] = 4096;
		let twoToThe[13] = 8192;
		let twoToThe[14] = 16384;
		let twoToThe[15] = twoToThe[14] + twoToThe[14];
        return;
    }

	function boolean bit(int num, int n){
		return (twoToThe[n] & num);
	}

    function int multiply(int x, int y) {
        var int sum, shiftedX, i, currentBit;
        let i = 0; // for 16 bits
        let sum = 0;
        let shiftedX = x;
		let currentBit = 0;

        while (i < 16){
			let currentBit = Math.bit(y, i);
			if (currentBit){
				let sum = sum + shiftedX;
			}
            let i = i + 1;
			let shiftedX = shiftedX + shiftedX;
        }
        return sum;
    }


    function int divide(int x, int y) {
		var int doubleY ;
		var int q;

		let doubleY = y * 2;

		if (y > x){
			return 0;
		}

		let q = Math.divide(x, doubleY);
		
		if (x - (2 * y * q) < y) {
			return 2 * q;
		}
		else {
			return (2 * q) + 1;
		}
	}

	function int sqrt(int x){
		var int min, max, mid, y, i, midSquared, squareX;
		let min = 1;
		let max = x;
		let i = 0;

		while (i < x){
			let mid = (min + max) / 2;
			let midSquared = mid * mid;	
			
			if (min = mid){
				return min;
			}
		
			if (x < (midSquared)){
				let max = mid;
			}
			if (x > midSquared){
				let min = mid;
			}
			if (x = midSquared){
				return mid;
			}

			let i = i + 1;
		}
		return 0;
	}

	function int abs(int x){
		if (x < 0){
			return -x;
		}
		return x;
	}

	function int min(int x, int y){
		if (x < y){
			return x;
		}
		return y;
	}

	function int max(int x, int y){
		if (x > y){
			return x;
		}
		return y;
	}
}